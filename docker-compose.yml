version: '3.8'

services:
  # PostgreSQL Database
  db:
    build:
      context: .
      dockerfile: postgres-custom.Dockerfile
    container_name: healthscore_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-healthscore}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-healthscore}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - healthscore-network

    # PgAdmin (Database Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: healthscore_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@healthscore.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - healthscore-network

  # Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: healthscore_api
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-healthscore}
      - SYNC_DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-healthscore}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - healthscore-network

  # Database Migrations
  migrations:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: healthscore_migrations
    volumes:
      - .:/app
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-healthscore}
      - SYNC_DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-healthscore}
    command: >
      bash -c "
      echo 'Waiting for database...' &&
      until pg_isready -h db -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-healthscore} -t 1; do
        sleep 1;
      done &&
      echo 'Running migrations...' &&
      alembic upgrade head"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - healthscore-network

networks:
  healthscore-network:
    driver: bridge

volumes:
  postgres_data:
